# for cuboid
robot_base_frame: base_link

transform_tolerance: 0.5

robot_radius: 0.26
inflater:
  footprint: [[-0.18, 0.18], [0.18, 0.18], [0.18, -0.18], [-0.18, -0.18]] # for CUBE
  robot_radius: 0.30
  #cost_scaling_factor: 7.0
  inflation_radius: 1.5
  cost_scaling_factor: 1.5

laser_obstacles:
  enabled: true
  observation_sources: scan scan_foot scan_head 
  combination_method: 1
  scan_foot:
      sensor_frame: rplidar_laser_foot_link
      data_type: LaserScan
      topic: scan_foot
      expected_update_rate: 0.3
      observation_persistence: 1.0
      inf_is_valid: true
      marking: true
      clearing: true
      raytrace_range: 5.5
      obstacle_range: 5.0
      min_obstacle_height: 0.05
      max_obstacle_height: 0.2
  scan_head:
      sensor_frame: rplidar_laser_link
      data_type: LaserScan
      topic: scan
      expected_update_rate: 0.3
      observation_persistence: 1.0
      inf_is_valid: true
      marking: true
      clearing: true
      raytrace_range: 5.5
      obstacle_range: 5.0
      min_obstacle_height: 0.05
      max_obstacle_height: 1.0
  scan:
      sensor_frame: cuboid_laser_link
      data_type: LaserScan
      topic: urg_scan
      expected_update_rate: 0.1
      observation_persistence: 1.0
      inf_is_valid: true
      marking: true
      clearing: true
      raytrace_range: 10.0
      obstacle_range: 10.0
      min_obstacle_height: 0.05
      max_obstacle_height: 1.0

rgbd_obstacles:
  enabled: true
  voxel_decay: 20     #seconds if linear, e^n if exponential
  decay_model: 0      #0=linear, 1=exponential, -1=persistent
  voxel_size:  0.05   #meters
  track_unknown_space: true   #default space is unknown
  observation_persistence: 0.0  #seconds
  max_obstacle_height: 1.2    #meters
  unknown_threshold: 15     #voxel height,
  mark_threshold: 0      #voxel height
  update_footprint_enabled: true
  combination_method: 1      #1=max, 0=override
  obstacle_range: 3.0    #meters
  origin_z: 0.0    #meters
  publish_voxel_map: true   # default off
  transform_tolerance: 0.2    # seconds
  mapping_mode: false  # default off, saves map not for navigation
  map_save_duration: 60     #default 60s, how often to autosave
  observation_sources: kinect_mark kinect_clear picoflexx_mark picoflexx_clear 
  kinect_mark: 
     data_type: PointCloud2
     topic: camera/sd/points_filtered #camera/sd/points_filtered   #camera/sd/points_edge 
     marking: true
     clearing: false
     min_obstacle_height: 0.05   #default 0, meters
     max_obstacle_height: 2.0     #defaule 3, meters
     expected_update_rate: 0.0    #default 0, if not updating at this rate at least, remove from buffer
     observation_persistence: 0.0 #default 0, use all measurements taken during now-value, 0=latest 
     inf_is_valid: false          #default false, for laser scans
     clear_after_reading: true    #default false, clear the buffer after the layer gets readings from it
     voxel_filter: true           #default off, apply voxel filter to sensor, recommend on 
  kinect_clear:
     data_type: PointCloud2
     topic: camera/sd/points_filtered #camera/sd/points_filtered #camera/sd/points_edge  
     marking: false
     clearing: true
     min_z: 0.1                   #default 0, meters
     max_z: 7.0                   #default 10, meters
     vertical_fov_angle: 0.7      #default 0.7, radians
     horizontal_fov_angle: 1.04   #default 1.04, radians
     decay_acceleration: 1.       #default 0, 1/s^2. If laser scanner MUST be 0
  picoflexx_mark:
      data_type: PointCloud2
      topic: pico_flexx/points
      marking: true
      clearing: false
      min_obstacle_height: 0.05   #default 0, meters
      max_obstacle_height: 2.0     #defaule 3, meters
      expected_update_rate: 0.0    #default 0, if not updating at this rate at least, remove from buffer
      observation_persistence: 0.0 #default 0, use all measurements taken during now-value, 0=latest 
      inf_is_valid: false          #default false, for laser scans
      clear_after_reading: true    #default false, clear the buffer after the layer gets readings from it
      voxel_filter: true           #default off, apply voxel filter to sensor, recommend on 
  picoflexx_clear:
      data_type: PointCloud2
      topic: pico_flexx/points
      marking: false
      clearing: true
      min_z: 0.1                   #default 0, meters
      max_z: 7.0                   #default 10, meters
      vertical_fov_angle: 0.7      #default 0.7, radians
      horizontal_fov_angle: 1.04   #default 1.04, radians
      decay_acceleration: 1.       #default 0, 1/s^2. If laser scanner MUST be 0
range_sensor_layer:
    clear_threshold:    0.46
    mark_threshold:     0.98
    no_readings_timeout: 2.0
    clear_on_max_reading: true
    #ns:     /sonars
    topics: ["/sonar/left_side", "/sonar/left_oblique", "/sonar/left_front", "/sonar/right_side", "/sonar/right_oblique", "/sonar/right_front"]

